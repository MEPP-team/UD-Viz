{"list":[{"title":"Audio","link":"<a href=\"module-Audio.html\">Audio</a>","description":"<p>MODULE Audio</p>"},{"title":"Collider","link":"<a href=\"module-Collider.html\">Collider</a>","description":"<p>MODULE Collider</p>"},{"title":"ExternalScript","link":"<a href=\"module-ExternalScript.html\">ExternalScript</a>","description":"<p>MODULE ExternalScript</p>"},{"title":"GameScript","link":"<a href=\"module-GameScript.html\">GameScript</a>","description":"<p>MODULE GameScript</p>"},{"title":"Render","link":"<a href=\"module-Render.html\">Render</a>","description":"<p>MODULE Render</p>"},{"title":"Script","link":"<a href=\"module-Script.html\">Script</a>","description":"<p>MODULE Script</p>"},{"title":"Type","link":"<a href=\"module-Type.html\">Type</a>","description":"<p>MODULE Type</p>"},{"title":"module:Type.isNumeric","link":"<a href=\"module-Type.html#.isNumeric\">module:Type &rtrif; isNumeric</a>"},{"title":"udvizCore","link":"<a href=\"module-udvizCore.html\">udvizCore</a>","description":"<p>ud-viz core library (browser + node compatible)</p>"},{"title":"AudioComponent","link":"<a href=\"AudioComponent.html\">AudioComponent</a>"},{"title":"AudioModel","link":"<a href=\"AudioModel.html\">AudioModel</a>","description":"<p>Audio model component</p>"},{"title":"AudioModel#getConf","link":"<a href=\"AudioModel.html#getConf\">AudioModel &rtrif; getConf</a>","description":"<p>Audio object3D ModelComponent</p>"},{"title":"AudioModel#getSoundsJSON","link":"<a href=\"AudioModel.html#getSoundsJSON\">AudioModel &rtrif; getSoundsJSON</a>","description":"<p>Audio object3D ModelComponent</p>"},{"title":"AudioModel#toJSON","link":"<a href=\"AudioModel.html#toJSON\">AudioModel &rtrif; toJSON</a>","description":"<p>Audio object3D ModelComponent</p>"},{"title":"ColliderComponent","link":"<a href=\"ColliderComponent.html\">ColliderComponent</a>"},{"title":"ColliderController","link":"<a href=\"ColliderController.html\">ColliderController</a>","description":"<p>Controller collider component</p>"},{"title":"ColliderController#getShapeWrappers","link":"<a href=\"ColliderController.html#getShapeWrappers\">ColliderController &rtrif; getShapeWrappers</a>"},{"title":"ColliderController#update","link":"<a href=\"ColliderController.html#update\">ColliderController &rtrif; update</a>"},{"title":"ColliderModel","link":"<a href=\"ColliderModel.html\">ColliderModel</a>","description":"<p>Model of a collider component</p>"},{"title":"ColliderModel#getShapesJSON","link":"<a href=\"ColliderModel.html#getShapesJSON\">ColliderModel &rtrif; getShapesJSON</a>"},{"title":"ColliderModel#isBody","link":"<a href=\"ColliderModel.html#isBody\">ColliderModel &rtrif; isBody</a>"},{"title":"ColliderModel#toJSON","link":"<a href=\"ColliderModel.html#toJSON\">ColliderModel &rtrif; toJSON</a>"},{"title":"Command","link":"<a href=\"Command.html\">Command</a>","description":"<p>Create a Command (this class can be used to make different process communicate together)</p>"},{"title":"Command#getData","link":"<a href=\"Command.html#getData\">Command &rtrif; getData</a>"},{"title":"Command#getType","link":"<a href=\"Command.html#getType\">Command &rtrif; getType</a>"},{"title":"Command#toJSON","link":"<a href=\"Command.html#toJSON\">Command &rtrif; toJSON</a>"},{"title":"Component","link":"<a href=\"Component.html\">Component</a>","description":"<p>Wrapper of a controller and a model</p>"},{"title":"Component#getController","link":"<a href=\"Component.html#getController\">Component &rtrif; getController</a>"},{"title":"Component#getModel","link":"<a href=\"Component.html#getModel\">Component &rtrif; getModel</a>"},{"title":"Component#initController","link":"<a href=\"Component.html#initController\">Component &rtrif; initController</a>"},{"title":"Context","link":"<a href=\"Context.html\">Context</a>","description":"<p>Handle Game collisions + {@link ScriptBase}</p>"},{"title":"Context#addObject3D","link":"<a href=\"Context.html#addObject3D\">Context &rtrif; addObject3D</a>"},{"title":"Context#createInstanceOf","link":"<a href=\"Context.html#createInstanceOf\">Context &rtrif; createInstanceOf</a>"},{"title":"Context#dispatch","link":"<a href=\"Context.html#dispatch\">Context &rtrif; dispatch</a>"},{"title":"Context#dispatchScriptEvent","link":"<a href=\"Context.html#dispatchScriptEvent\">Context &rtrif; dispatchScriptEvent</a>"},{"title":"Context#getCommands","link":"<a href=\"Context.html#getCommands\">Context &rtrif; getCommands</a>"},{"title":"Context#getDt","link":"<a href=\"Context.html#getDt\">Context &rtrif; getDt</a>"},{"title":"Context#getObject3D","link":"<a href=\"Context.html#getObject3D\">Context &rtrif; getObject3D</a>"},{"title":"Context#initComponentControllers","link":"<a href=\"Context.html#initComponentControllers\">Context &rtrif; initComponentControllers</a>"},{"title":"Context#load","link":"<a href=\"Context.html#load\">Context &rtrif; load</a>"},{"title":"Context#loadObject3D","link":"<a href=\"Context.html#loadObject3D\">Context &rtrif; loadObject3D</a>"},{"title":"Context#on","link":"<a href=\"Context.html#on\">Context &rtrif; on</a>"},{"title":"Context#onCommand","link":"<a href=\"Context.html#onCommand\">Context &rtrif; onCommand</a>"},{"title":"Context#registerObject3DCollision","link":"<a href=\"Context.html#registerObject3DCollision\">Context &rtrif; registerObject3DCollision</a>"},{"title":"Context#removeObject3D","link":"<a href=\"Context.html#removeObject3D\">Context &rtrif; removeObject3D</a>"},{"title":"Context#step","link":"<a href=\"Context.html#step\">Context &rtrif; step</a>"},{"title":"Context#toState","link":"<a href=\"Context.html#toState\">Context &rtrif; toState</a>"},{"title":"Context#unregisterObject3DCollision","link":"<a href=\"Context.html#unregisterObject3DCollision\">Context &rtrif; unregisterObject3DCollision</a>"},{"title":"Context#updateCollision","link":"<a href=\"Context.html#updateCollision\">Context &rtrif; updateCollision</a>"},{"title":"Context#updateCollisionBuffer","link":"<a href=\"Context.html#updateCollisionBuffer\">Context &rtrif; updateCollisionBuffer</a>"},{"title":"Controller","link":"<a href=\"Controller.html\">Controller</a>","description":"<p>Controller object3D component</p>"},{"title":"Diff","link":"<a href=\"Diff.html\">Diff</a>","description":"<p>Store difference between two following states (state(t) + diff(t,t+1) = state(t+1))</p>"},{"title":"Diff#getNextStateObjectsUUID","link":"<a href=\"Diff.html#getNextStateObjectsUUID\">Diff &rtrif; getNextStateObjectsUUID</a>"},{"title":"Diff#getObjects3DToUpdateJSON","link":"<a href=\"Diff.html#getObjects3DToUpdateJSON\">Diff &rtrif; getObjects3DToUpdateJSON</a>"},{"title":"Diff#getTimeStamp","link":"<a href=\"Diff.html#getTimeStamp\">Diff &rtrif; getTimeStamp</a>"},{"title":"EventSender","link":"<a href=\"EventSender.html\">EventSender</a>","description":"<p>Class to manage events. Represents an object that can send events.\nAny part of the code can listen to these events. They can either listen to\nspecific events, or to all events.</p>"},{"title":"EventSender#addEventListener","link":"<a href=\"EventSender.html#addEventListener\">EventSender &rtrif; addEventListener</a>"},{"title":"EventSender#addListener","link":"<a href=\"EventSender.html#addListener\">EventSender &rtrif; addListener</a>"},{"title":"EventSender#registerEvent","link":"<a href=\"EventSender.html#registerEvent\">EventSender &rtrif; registerEvent</a>"},{"title":"EventSender#removeEventListener","link":"<a href=\"EventSender.html#removeEventListener\">EventSender &rtrif; removeEventListener</a>"},{"title":"EventSender#sendEvent","link":"<a href=\"EventSender.html#sendEvent\">EventSender &rtrif; sendEvent</a>"},{"title":"ExternalScriptComponent","link":"<a href=\"ExternalScriptComponent.html\">ExternalScriptComponent</a>"},{"title":"ExternalScriptModel","link":"<a href=\"ExternalScriptModel.html\">ExternalScriptModel</a>"},{"title":"ExternalScriptModel#toJSON","link":"<a href=\"ExternalScriptModel.html#toJSON\">ExternalScriptModel &rtrif; toJSON</a>"},{"title":"GameScriptComponent","link":"<a href=\"GameScriptComponent.html\">GameScriptComponent</a>"},{"title":"GameScriptModel","link":"<a href=\"GameScriptModel.html\">GameScriptModel</a>"},{"title":"GameScriptModel#toJSON","link":"<a href=\"GameScriptModel.html#toJSON\">GameScriptModel &rtrif; toJSON</a>"},{"title":"Interpolator","link":"<a href=\"Interpolator.html\">Interpolator</a>","description":"<p>Handle reception of states over time and can on demand compute current states that need to be processed.\nCurrent states are delivered/computed with a delay and can be interpolated in order to &quot;smooth&quot; them\nsee {@link State} to have a better understanding</p>\n<p>Very inspired (quite identical) from there {@link https://victorzhou.com/blog/build-an-io-game-part-1/#7-client-state}</p>"},{"title":"Interpolator#_computeCurrentServerTime","link":"<a href=\"Interpolator.html#_computeCurrentServerTime\">Interpolator &rtrif; _computeCurrentServerTime</a>"},{"title":"Interpolator#_computeIndexBaseState","link":"<a href=\"Interpolator.html#_computeIndexBaseState\">Interpolator &rtrif; _computeIndexBaseState</a>"},{"title":"Interpolator#_getLastStateReceived","link":"<a href=\"Interpolator.html#_getLastStateReceived\">Interpolator &rtrif; _getLastStateReceived</a>"},{"title":"Interpolator#computeCurrentState","link":"<a href=\"Interpolator.html#computeCurrentState\">Interpolator &rtrif; computeCurrentState</a>"},{"title":"Interpolator#computeCurrentStates","link":"<a href=\"Interpolator.html#computeCurrentStates\">Interpolator &rtrif; computeCurrentStates</a>"},{"title":"Interpolator#getPing","link":"<a href=\"Interpolator.html#getPing\">Interpolator &rtrif; getPing</a>"},{"title":"Interpolator#onFirstState","link":"<a href=\"Interpolator.html#onFirstState\">Interpolator &rtrif; onFirstState</a>"},{"title":"Interpolator#onNewDiff","link":"<a href=\"Interpolator.html#onNewDiff\">Interpolator &rtrif; onNewDiff</a>"},{"title":"Interpolator#onNewState","link":"<a href=\"Interpolator.html#onNewState\">Interpolator &rtrif; onNewState</a>"},{"title":"Model","link":"<a href=\"Model.html\">Model</a>"},{"title":"Model#getUUID","link":"<a href=\"Model.html#getUUID\">Model &rtrif; getUUID</a>","description":"<p>Model object3D component</p>"},{"title":"Model#toJSON","link":"<a href=\"Model.html#toJSON\">Model &rtrif; toJSON</a>","description":"<p>Model object3D component</p>"},{"title":"Object3D","link":"<a href=\"Object3D.html\">Object3D</a>","description":"<p>Base class extended {@link THREE.Object3D} to compose 3D scene of ud-viz game</p>"},{"title":"Object3D.computeBackward","link":"<a href=\"Object3D.html#.computeBackward\">Object3D &rtrif; computeBackward</a>"},{"title":"Object3D.computeForward","link":"<a href=\"Object3D.html#.computeForward\">Object3D &rtrif; computeForward</a>"},{"title":"Object3D.deepCopy","link":"<a href=\"Object3D.html#.deepCopy\">Object3D &rtrif; deepCopy</a>"},{"title":"Object3D.DefaultForward","link":"<a href=\"Object3D.html#.DefaultForward\">Object3D &rtrif; DefaultForward</a>"},{"title":"Object3D.moveBackward","link":"<a href=\"Object3D.html#.moveBackward\">Object3D &rtrif; moveBackward</a>"},{"title":"Object3D.moveForward","link":"<a href=\"Object3D.html#.moveForward\">Object3D &rtrif; moveForward</a>"},{"title":"Object3D.parseJSON","link":"<a href=\"Object3D.html#.parseJSON\">Object3D &rtrif; parseJSON</a>"},{"title":"Object3D.rotate","link":"<a href=\"Object3D.html#.rotate\">Object3D &rtrif; rotate</a>"},{"title":"Object3D#clone","link":"<a href=\"Object3D.html#clone\">Object3D &rtrif; clone</a>"},{"title":"Object3D#getComponent","link":"<a href=\"Object3D.html#getComponent\">Object3D &rtrif; getComponent</a>"},{"title":"Object3D#getComponents","link":"<a href=\"Object3D.html#getComponents\">Object3D &rtrif; getComponents</a>"},{"title":"Object3D#hasGameContextUpdate","link":"<a href=\"Object3D.html#hasGameContextUpdate\">Object3D &rtrif; hasGameContextUpdate</a>"},{"title":"Object3D#isOutdated","link":"<a href=\"Object3D.html#isOutdated\">Object3D &rtrif; isOutdated</a>"},{"title":"Object3D#isStatic","link":"<a href=\"Object3D.html#isStatic\">Object3D &rtrif; isStatic</a>"},{"title":"Object3D#setOutdated","link":"<a href=\"Object3D.html#setOutdated\">Object3D &rtrif; setOutdated</a>"},{"title":"Object3D#toJSON","link":"<a href=\"Object3D.html#toJSON\">Object3D &rtrif; toJSON</a>"},{"title":"Object3D#traverse","link":"<a href=\"Object3D.html#traverse\">Object3D &rtrif; traverse</a>"},{"title":"Object3D#updateComponentFromJSON","link":"<a href=\"Object3D.html#updateComponentFromJSON\">Object3D &rtrif; updateComponentFromJSON</a>"},{"title":"Object3D#updatefromJSON","link":"<a href=\"Object3D.html#updatefromJSON\">Object3D &rtrif; updatefromJSON</a>"},{"title":"Object3D#updateMatrixFromJSON","link":"<a href=\"Object3D.html#updateMatrixFromJSON\">Object3D &rtrif; updateMatrixFromJSON</a>"},{"title":"PartialString","link":"<a href=\"PartialString.html\">PartialString</a>","description":"<p>Part of a global string</p>"},{"title":"PartialString#setIndex","link":"<a href=\"PartialString.html#setIndex\">PartialString &rtrif; setIndex</a>"},{"title":"PartialString#setTotalPartialStringCount","link":"<a href=\"PartialString.html#setTotalPartialStringCount\">PartialString &rtrif; setTotalPartialStringCount</a>"},{"title":"ProcessInterval","link":"<a href=\"ProcessInterval.html\">ProcessInterval</a>","description":"<p>Create a loop process based on the setInterval native js method</p>"},{"title":"ProcessInterval#addtickRequester","link":"<a href=\"ProcessInterval.html#addtickRequester\">ProcessInterval &rtrif; addtickRequester</a>"},{"title":"ProcessInterval#setPause","link":"<a href=\"ProcessInterval.html#setPause\">ProcessInterval &rtrif; setPause</a>"},{"title":"ProcessInterval#start","link":"<a href=\"ProcessInterval.html#start\">ProcessInterval &rtrif; start</a>"},{"title":"ProcessInterval#stop","link":"<a href=\"ProcessInterval.html#stop\">ProcessInterval &rtrif; stop</a>"},{"title":"RenderComponent","link":"<a href=\"RenderComponent.html\">RenderComponent</a>"},{"title":"RenderModel","link":"<a href=\"RenderModel.html\">RenderModel</a>","description":"<p>Render object3D component model store data to render an object3D (in an external context), a render controller should be implemented to use it</p>"},{"title":"RenderModel#getColor","link":"<a href=\"RenderModel.html#getColor\">RenderModel &rtrif; getColor</a>"},{"title":"RenderModel#getIdRenderData","link":"<a href=\"RenderModel.html#getIdRenderData\">RenderModel &rtrif; getIdRenderData</a>"},{"title":"RenderModel#setColor","link":"<a href=\"RenderModel.html#setColor\">RenderModel &rtrif; setColor</a>"},{"title":"RenderModel#setIdRenderData","link":"<a href=\"RenderModel.html#setIdRenderData\">RenderModel &rtrif; setIdRenderData</a>"},{"title":"RenderModel#toJSON","link":"<a href=\"RenderModel.html#toJSON\">RenderModel &rtrif; toJSON</a>"},{"title":"ScriptBase","link":"<a href=\"ScriptBase.html\">ScriptBase</a>","description":"<p>Skeleton of a game context script, different {@link Context.EVENT} are trigger by {@link Context}</p>"},{"title":"ScriptBase#init","link":"<a href=\"ScriptBase.html#init\">ScriptBase &rtrif; init</a>"},{"title":"ScriptBase#isColliding","link":"<a href=\"ScriptBase.html#isColliding\">ScriptBase &rtrif; isColliding</a>"},{"title":"ScriptBase#load","link":"<a href=\"ScriptBase.html#load\">ScriptBase &rtrif; load</a>"},{"title":"ScriptBase#onEnterCollision","link":"<a href=\"ScriptBase.html#onEnterCollision\">ScriptBase &rtrif; onEnterCollision</a>"},{"title":"ScriptBase#onLeaveCollision","link":"<a href=\"ScriptBase.html#onLeaveCollision\">ScriptBase &rtrif; onLeaveCollision</a>"},{"title":"ScriptBase#tick","link":"<a href=\"ScriptBase.html#tick\">ScriptBase &rtrif; tick</a>"},{"title":"ScriptController","link":"<a href=\"ScriptController.html\">ScriptController</a>","description":"<p>Controller of object3D script component</p>"},{"title":"ScriptController#execute","link":"<a href=\"ScriptController.html#execute\">ScriptController &rtrif; execute</a>"},{"title":"ScriptController#executeScript","link":"<a href=\"ScriptController.html#executeScript\">ScriptController &rtrif; executeScript</a>"},{"title":"ScriptController#getScripts","link":"<a href=\"ScriptController.html#getScripts\">ScriptController &rtrif; getScripts</a>"},{"title":"ScriptController#setVariables","link":"<a href=\"ScriptController.html#setVariables\">ScriptController &rtrif; setVariables</a>"},{"title":"ScriptModel","link":"<a href=\"ScriptModel.html\">ScriptModel</a>","description":"<p>Model of object3D script component</p>"},{"title":"ScriptModel#getIdScripts","link":"<a href=\"ScriptModel.html#getIdScripts\">ScriptModel &rtrif; getIdScripts</a>"},{"title":"ScriptModel#getVariables","link":"<a href=\"ScriptModel.html#getVariables\">ScriptModel &rtrif; getVariables</a>"},{"title":"ShapeWrapper","link":"<a href=\"ShapeWrapper.html\">ShapeWrapper</a>","description":"<p>Wrap {@link Polygon} or {@link Circle} of {@link https://www.npmjs.com/package/detect-collisions}</p>"},{"title":"ShapeWrapper#getObject3D","link":"<a href=\"ShapeWrapper.html#getObject3D\">ShapeWrapper &rtrif; getObject3D</a>"},{"title":"ShapeWrapper#getShape","link":"<a href=\"ShapeWrapper.html#getShape\">ShapeWrapper &rtrif; getShape</a>"},{"title":"ShapeWrapper#initShapeFromJSON","link":"<a href=\"ShapeWrapper.html#initShapeFromJSON\">ShapeWrapper &rtrif; initShapeFromJSON</a>"},{"title":"ShapeWrapper#update","link":"<a href=\"ShapeWrapper.html#update\">ShapeWrapper &rtrif; update</a>"},{"title":"ShapeWrapper#update","link":"<a href=\"ShapeWrapper.html#update\">ShapeWrapper &rtrif; update</a>"},{"title":"State","link":"<a href=\"State.html\">State</a>","description":"<p>Store state of context at a given time</p>"},{"title":"State.interpolate","link":"<a href=\"State.html#.interpolate\">State &rtrif; interpolate</a>"},{"title":"State#add","link":"<a href=\"State.html#add\">State &rtrif; add</a>"},{"title":"State#clone","link":"<a href=\"State.html#clone\">State &rtrif; clone</a>"},{"title":"State#equals","link":"<a href=\"State.html#equals\">State &rtrif; equals</a>"},{"title":"State#getObject3D","link":"<a href=\"State.html#getObject3D\">State &rtrif; getObject3D</a>"},{"title":"State#getTimestamp","link":"<a href=\"State.html#getTimestamp\">State &rtrif; getTimestamp</a>"},{"title":"State#hasBeenConsumed","link":"<a href=\"State.html#hasBeenConsumed\">State &rtrif; hasBeenConsumed</a>"},{"title":"State#includes","link":"<a href=\"State.html#includes\">State &rtrif; includes</a>"},{"title":"State#setConsumed","link":"<a href=\"State.html#setConsumed\">State &rtrif; setConsumed</a>"},{"title":"State#sub","link":"<a href=\"State.html#sub\">State &rtrif; sub</a>"},{"title":"StringComposer","link":"<a href=\"StringComposer.html\">StringComposer</a>","description":"<p>Recompose string with {@link PartialString}</p>"},{"title":"StringComposer.splitString","link":"<a href=\"StringComposer.html#.splitString\">StringComposer &rtrif; splitString</a>"},{"title":"StringComposer#recompose","link":"<a href=\"StringComposer.html#recompose\">StringComposer &rtrif; recompose</a>"},{"title":"Changelog","link":"<a href=\"tutorial-Changelog.html\">Changelog</a>"},{"title":"ArchitectureMVCTargetDesign","link":"<a href=\"tutorial-ArchitectureMVCTargetDesign.html\">ArchitectureMVCTargetDesign</a>"},{"title":"Configuring-the-Document-model-of-an-UDV-deployment","link":"<a href=\"tutorial-Configuring-the-Document-model-of-an-UDV-deployment.html\">Configuring-the-Document-model-of-an-UDV-deployment</a>"},{"title":"LocalGameTutorial","link":"<a href=\"tutorial-LocalGameTutorial.html\">LocalGameTutorial</a>"},{"title":"ReleasePublish","link":"<a href=\"tutorial-ReleasePublish.html\">ReleasePublish</a>"},{"title":"Reproducibility","link":"<a href=\"tutorial-Reproducibility.html\">Reproducibility</a>"},{"title":"View3D","link":"<a href=\"tutorial-View3D.html\">View3D</a>"},{"title":"ContributeData","link":"<a href=\"tutorial-ContributeData.html\">ContributeData</a>"},{"title":"AllEventSenderCallback","link":"<a href=\"global.html#AllEventSenderCallback\">AllEventSenderCallback</a>"},{"title":"checkIfSubStringIsEuler","link":"<a href=\"global.html#checkIfSubStringIsEuler\">checkIfSubStringIsEuler</a>","description":"<p>Take an array of string and check if it is in euler format</p>"},{"title":"checkIfSubStringIsVector3","link":"<a href=\"global.html#checkIfSubStringIsVector3\">checkIfSubStringIsVector3</a>","description":"<p>Take an array of string and check if it is in vector3 format</p>"},{"title":"CircleJSON","link":"<a href=\"global.html#CircleJSON\">CircleJSON</a>","description":"<p>json object to configure {@link Circle} of {@link https://www.npmjs.com/package/detect-collisions}</p>"},{"title":"ContextListener","link":"<a href=\"global.html#ContextListener\">ContextListener</a>"},{"title":"dataUriToBuffer","link":"<a href=\"global.html#dataUriToBuffer\">dataUriToBuffer</a>","description":"<p>Convert a data URI into a Buffer</p>"},{"title":"eulerArrayFromURIComponent","link":"<a href=\"global.html#eulerArrayFromURIComponent\">eulerArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"},{"title":"EventSenderCallback","link":"<a href=\"global.html#EventSenderCallback\">EventSenderCallback</a>"},{"title":"getAttributeByPath","link":"<a href=\"global.html#getAttributeByPath\">getAttributeByPath</a>","description":"<p>Gets an attribute of an object from the given path. To get nested attributes,\nthe path qualifiers must be separated by dots ('.'). If the path is not\nnested (does not contain any dot), the function is equivalent to <code>obj[path]</code>.</p>"},{"title":"imageToDataURI","link":"<a href=\"global.html#imageToDataURI\">imageToDataURI</a>","description":"<p>Converts the raw content of an array buffer (as retrieved by a GET request\non a file) to a data URI. This is required, for example, to display images\nfetched from the server. As we need authentication headers to retrieve some\nprotected files, we get the raw data dynamically and need to convert it to\na data URI do display it.\nThe basic scheme of the URI is defined in the\n<a href=\"https://tools.ietf.org/html/rfc2397\">RFC 2397</a>, with the mediaType set to\n<code>mimeType</code> and the raw data converted to base64.</p>"},{"title":"int32ArrayToObject","link":"<a href=\"global.html#int32ArrayToObject\">int32ArrayToObject</a>","description":"<p>Convert a Int32Array into an Object</p>"},{"title":"objectEquals","link":"<a href=\"global.html#objectEquals\">objectEquals</a>","description":"<p>Check if two json object are equals</p>"},{"title":"objectOverWrite","link":"<a href=\"global.html#objectOverWrite\">objectOverWrite</a>","description":"<p>Overwrite identical key of jsonOverWrited with the one matching in jsonModel\nCreate key of jsonModel which are not in jsonOverWrited</p>"},{"title":"objectParse","link":"<a href=\"global.html#objectParse\">objectParse</a>","description":"<p>Apply a callback to each key value couple of a json object</p>"},{"title":"objectParseNumeric","link":"<a href=\"global.html#objectParseNumeric\">objectParseNumeric</a>","description":"<p>Replace all valid number string in a json object by a float</p>"},{"title":"objectToInt32Array","link":"<a href=\"global.html#objectToInt32Array\">objectToInt32Array</a>","description":"<p>Convert an Object into a Int32Array</p>"},{"title":"PolygonJSON","link":"<a href=\"global.html#PolygonJSON\">PolygonJSON</a>","description":"<p>json object to configure {@link Polygon} of {@link https://www.npmjs.com/package/detect-collisions}</p>"},{"title":"ProcessIntervalTickRequester","link":"<a href=\"global.html#ProcessIntervalTickRequester\">ProcessIntervalTickRequester</a>"},{"title":"removeEmptyValues","link":"<a href=\"global.html#removeEmptyValues\">removeEmptyValues</a>","description":"<p>Removes empty fields from a FormData. Useful for update requests that\nwould update those fields to an empty string if they were sent in the\nbody. To check if a value is empty, this function just convert it into\na boolean.</p>"},{"title":"TraverseCallback","link":"<a href=\"global.html#TraverseCallback\">TraverseCallback</a>"},{"title":"vector3ArrayFromURIComponent","link":"<a href=\"global.html#vector3ArrayFromURIComponent\">vector3ArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"}]}