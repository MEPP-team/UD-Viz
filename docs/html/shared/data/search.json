{"list":[{"title":"Audio","link":"<a href=\"module-Audio.html\">Audio</a>","description":"<p><code>MODULE</code> Audio</p>"},{"title":"Collider","link":"<a href=\"module-Collider.html\">Collider</a>","description":"<p><code>MODULE</code> Collider</p>"},{"title":"ExternalScript","link":"<a href=\"module-ExternalScript.html\">ExternalScript</a>","description":"<p><code>MODULE</code> ExternalScript</p>"},{"title":"GameScript","link":"<a href=\"module-GameScript.html\">GameScript</a>","description":"<p><code>MODULE</code> GameScript</p>"},{"title":"Render","link":"<a href=\"module-Render.html\">Render</a>","description":"<p><code>MODULE</code> Render</p>"},{"title":"Script","link":"<a href=\"module-Script.html\">Script</a>","description":"<p><code>MODULE</code> Script</p>"},{"title":"Type","link":"<a href=\"module-Type.html\">Type</a>","description":"<p><code>MODULE</code> Type</p>"},{"title":"udvizShared","link":"<a href=\"module-udvizShared.html\">udvizShared</a>","description":"<p>ud-viz shared library (browser + node compatible)</p>"},{"title":"AudioComponent","link":"<a href=\"AudioComponent.html\">AudioComponent</a>"},{"title":"AudioModel","link":"<a href=\"AudioModel.html\">AudioModel</a>","description":"<p>Audio model component</p>"},{"title":"ColliderComponent","link":"<a href=\"ColliderComponent.html\">ColliderComponent</a>"},{"title":"ColliderController","link":"<a href=\"ColliderController.html\">ColliderController</a>","description":"<p>Controller collider component</p>"},{"title":"ColliderModel","link":"<a href=\"ColliderModel.html\">ColliderModel</a>","description":"<p>Model of a collider component</p>"},{"title":"Command","link":"<a href=\"Command.html\">Command</a>","description":"<p>Create a Command (this class can be used to make different process communicate together)</p>"},{"title":"Component","link":"<a href=\"Component.html\">Component</a>","description":"<p>Wrapper of a controller and a model</p>"},{"title":"Context","link":"<a href=\"Context.html\">Context</a>","description":"<p>Handle collisions, add/remove gameobject3D, process commands + trigger {@link ScriptBase} event</p>"},{"title":"Controller","link":"<a href=\"Controller.html\">Controller</a>","description":"<p>Controller object3D component</p>"},{"title":"Diff","link":"<a href=\"Diff.html\">Diff</a>","description":"<p>Store difference between two following states (state(t) + diff(t,t+1) = state(t+1))</p>"},{"title":"ExternalScriptComponent","link":"<a href=\"ExternalScriptComponent.html\">ExternalScriptComponent</a>"},{"title":"ExternalScriptModel","link":"<a href=\"ExternalScriptModel.html\">ExternalScriptModel</a>"},{"title":"GameScriptComponent","link":"<a href=\"GameScriptComponent.html\">GameScriptComponent</a>"},{"title":"GameScriptModel","link":"<a href=\"GameScriptModel.html\">GameScriptModel</a>"},{"title":"Interpolator","link":"<a href=\"Interpolator.html\">Interpolator</a>","description":"<p>Handle reception of states over time and can on demand compute current states that need to be processed.\nCurrent states are delivered/computed with a delay and can be interpolated in order to &quot;smooth&quot; them\nsee {@link State} to have a better understanding</p>\n<p>Very inspired (quite identical) from there {@link https://victorzhou.com/blog/build-an-io-game-part-1/#7-client-state}</p>"},{"title":"Model","link":"<a href=\"Model.html\">Model</a>"},{"title":"NativeCommandManager","link":"<a href=\"NativeCommandManager.html\">NativeCommandManager</a>"},{"title":"Object3D","link":"<a href=\"Object3D.html\">Object3D</a>","description":"<p>Base class extended {@link THREE.Object3D} to compose 3D scene of ud-viz game</p>"},{"title":"PartialString","link":"<a href=\"PartialString.html\">PartialString</a>","description":"<p>Part of a global string</p>"},{"title":"ProcessInterval","link":"<a href=\"ProcessInterval.html\">ProcessInterval</a>","description":"<p>Create a loop process based on the setInterval native js method</p>"},{"title":"RenderComponent","link":"<a href=\"RenderComponent.html\">RenderComponent</a>"},{"title":"RenderModel","link":"<a href=\"RenderModel.html\">RenderModel</a>","description":"<p>Render object3D component model store data to render an object3D (in an external context), a render controller should be implemented to use it</p>"},{"title":"ScriptBase","link":"<a href=\"ScriptBase.html\">ScriptBase</a>","description":"<p>Skeleton of a game context script, different {@link Context.EVENT} are trigger by {@link Context}</p>"},{"title":"ScriptController","link":"<a href=\"ScriptController.html\">ScriptController</a>","description":"<p>Controller of object3D script component</p>"},{"title":"ScriptModel","link":"<a href=\"ScriptModel.html\">ScriptModel</a>","description":"<p>Model of object3D script component</p>"},{"title":"ShapeWrapper","link":"<a href=\"ShapeWrapper.html\">ShapeWrapper</a>","description":"<p>Wrap {@link Polygon} or {@link Circle} of {@link https://www.npmjs.com/package/detect-collisions}</p>"},{"title":"State","link":"<a href=\"State.html\">State</a>","description":"<p>Store state of context at a given time</p>"},{"title":"StringComposer","link":"<a href=\"StringComposer.html\">StringComposer</a>","description":"<p>Recompose string with {@link PartialString}</p>"},{"title":"exports","link":"<a href=\"module.exports_module.exports.html\">exports</a>","description":"<p>Handle game context operation of a drag and drop avatar feature</p>"},{"title":"Architecture","link":"<a href=\"tutorial-Architecture.html\">Architecture</a>"},{"title":"Changelog","link":"<a href=\"tutorial-Changelog.html\">Changelog</a>"},{"title":"Contributors","link":"<a href=\"tutorial-Contributors.html\">Contributors</a>"},{"title":"Developers","link":"<a href=\"tutorial-Developers.html\">Developers</a>"},{"title":"BrowserD2","link":"<a href=\"tutorial-BrowserD2.html\">BrowserD2</a>"},{"title":"BrowserSrcD2","link":"<a href=\"tutorial-BrowserSrcD2.html\">BrowserSrcD2</a>"},{"title":"BrowserSrcFrame3D","link":"<a href=\"tutorial-BrowserSrcFrame3D.html\">BrowserSrcFrame3D</a>"},{"title":"BrowserSrcGame","link":"<a href=\"tutorial-BrowserSrcGame.html\">BrowserSrcGame</a>"},{"title":"BrowserSrcGameD3","link":"<a href=\"tutorial-BrowserSrcGameD3.html\">BrowserSrcGameD3</a>"},{"title":"BrowserSrcWidgetD3","link":"<a href=\"tutorial-BrowserSrcWidgetD3.html\">BrowserSrcWidgetD3</a>"},{"title":"Node","link":"<a href=\"tutorial-Node.html\">Node</a>"},{"title":"SharedD3","link":"<a href=\"tutorial-SharedD3.html\">SharedD3</a>"},{"title":"SharedSrcGame","link":"<a href=\"tutorial-SharedSrcGame.html\">SharedSrcGame</a>"},{"title":"CircleJSON","link":"<a href=\"global.html#CircleJSON\">CircleJSON</a>","description":"<p>json object to configure {@link Circle} of {@link https://www.npmjs.com/package/detect-collisions}</p>"},{"title":"ContextListener","link":"<a href=\"global.html#ContextListener\">ContextListener</a>"},{"title":"DragAndDropAvatarVariables","link":"<a href=\"global.html#DragAndDropAvatarVariables\">DragAndDropAvatarVariables</a>"},{"title":"PolygonJSON","link":"<a href=\"global.html#PolygonJSON\">PolygonJSON</a>","description":"<p>json object to configure {@link Polygon} of {@link https://www.npmjs.com/package/detect-collisions}</p>"},{"title":"ProcessIntervalTickRequester","link":"<a href=\"global.html#ProcessIntervalTickRequester\">ProcessIntervalTickRequester</a>"},{"title":"TraverseCallback","link":"<a href=\"global.html#TraverseCallback\">TraverseCallback</a>"},{"title":"arrayEquals","link":"<a href=\"global.html#arrayEquals\">arrayEquals</a>","description":"<p>Check if both array are equals</p>"},{"title":"arrayPushOnce","link":"<a href=\"global.html#arrayPushOnce\">arrayPushOnce</a>","description":"<p>Check if the element is alreeady included in the array if not push it</p>"},{"title":"checkIfSubStringIsEuler","link":"<a href=\"global.html#checkIfSubStringIsEuler\">checkIfSubStringIsEuler</a>","description":"<p>Take an array of string and check if it is in euler format</p>"},{"title":"checkIfSubStringIsMatrix4","link":"<a href=\"global.html#checkIfSubStringIsMatrix4\">checkIfSubStringIsMatrix4</a>","description":"<p>Take an array of string and check if it is in matrix4 format</p>"},{"title":"checkIfSubStringIsVector3","link":"<a href=\"global.html#checkIfSubStringIsVector3\">checkIfSubStringIsVector3</a>","description":"<p>Take an array of string and check if it is in vector3 format</p>"},{"title":"computeFileFormat","link":"<a href=\"global.html#computeFileFormat\">computeFileFormat</a>","description":"<p>Compute the last string after the . in the filename</p>"},{"title":"dataUriToBuffer","link":"<a href=\"global.html#dataUriToBuffer\">dataUriToBuffer</a>","description":"<p>Convert a data URI into a Buffer</p>"},{"title":"eulerArrayFromURIComponent","link":"<a href=\"global.html#eulerArrayFromURIComponent\">eulerArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"},{"title":"getAttributeByPath","link":"<a href=\"global.html#getAttributeByPath\">getAttributeByPath</a>","description":"<p>Gets an attribute of an object from the given path. To get nested attributes,\nthe path qualifiers must be separated by dots ('.'). If the path is not\nnested (does not contain any dot), the function is equivalent to <code>obj[path]</code>.</p>"},{"title":"imageToDataURI","link":"<a href=\"global.html#imageToDataURI\">imageToDataURI</a>","description":"<p>Converts the raw content of an array buffer (as retrieved by a GET request\non a file) to a data URI. This is required, for example, to display images\nfetched from the server. As we need authentication headers to retrieve some\nprotected files, we get the raw data dynamically and need to convert it to\na data URI do display it.\nThe basic scheme of the URI is defined in the\n<a href=\"https://tools.ietf.org/html/rfc2397\">RFC 2397</a>, with the mediaType set to\n<code>mimeType</code> and the raw data converted to base64.</p>"},{"title":"int32ArrayToObject","link":"<a href=\"global.html#int32ArrayToObject\">int32ArrayToObject</a>","description":"<p>Convert a Int32Array into an Object</p>"},{"title":"matrix4ArrayFromURIComponent","link":"<a href=\"global.html#matrix4ArrayFromURIComponent\">matrix4ArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"},{"title":"objectEquals","link":"<a href=\"global.html#objectEquals\">objectEquals</a>","description":"<p>Check if two json object are equals</p>"},{"title":"objectOverWrite","link":"<a href=\"global.html#objectOverWrite\">objectOverWrite</a>","description":"<p>Overwrite identical key of jsonOverWrited with the one matching in jsonModel\nCreate key of jsonModel which are not in jsonOverWrited</p>"},{"title":"objectParse","link":"<a href=\"global.html#objectParse\">objectParse</a>","description":"<p>Apply a callback to each key value couple of an object</p>"},{"title":"objectParseNumeric","link":"<a href=\"global.html#objectParseNumeric\">objectParseNumeric</a>","description":"<p>Replace all valid number string in a json object by a float</p>"},{"title":"objectToInt32Array","link":"<a href=\"global.html#objectToInt32Array\">objectToInt32Array</a>","description":"<p>Convert an Object into a Int32Array</p>"},{"title":"removeEmptyValues","link":"<a href=\"global.html#removeEmptyValues\">removeEmptyValues</a>","description":"<p>Removes empty fields from a FormData. Useful for update requests that\nwould update those fields to an empty string if they were sent in the\nbody. To check if a value is empty, this function just convert it into\na boolean.</p>"},{"title":"removeFromArray","link":"<a href=\"global.html#removeFromArray\">removeFromArray</a>","description":"<p>Remove an element if it's present in an array</p>"},{"title":"vector3ArrayFromURIComponent","link":"<a href=\"global.html#vector3ArrayFromURIComponent\">vector3ArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"}]}